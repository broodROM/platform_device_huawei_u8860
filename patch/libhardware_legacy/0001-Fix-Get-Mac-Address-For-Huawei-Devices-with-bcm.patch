From 8eecb91808fdb514ee79d663e96771ffb674259e Mon Sep 17 00:00:00 2001
From: huangqiwu <huangqiwu@xiaomi.com>
Date: Fri, 12 Jul 2013 13:36:18 +0800
Subject: [PATCH] Fix Get Mac Address For Huawei Devices with bcm

Change-Id: Ic0d138100d2ada1ba664d090f3fe632946eb0f7d
---
 wifi/Android.mk |  6 +++++-
 wifi/wifi.c     | 60 +++++++++++++++++++++++++++++++++++++++++++++++++++++++--
 2 files changed, 63 insertions(+), 3 deletions(-)

diff --git a/wifi/Android.mk b/wifi/Android.mk
index 51afe3a..2e4bd0c 100644
--- a/wifi/Android.mk
+++ b/wifi/Android.mk
@@ -49,4 +49,8 @@ ifeq ($(BOARD_HAVE_SAMSUNG_WIFI),true)
 LOCAL_CFLAGS += -DSAMSUNG_WIFI
 endif
 
-LOCAL_SHARED_LIBRARIES += libnetutils
+ifeq ($(BOARD_USE_HUAWEI_BCM_WIFI),true)
+    LOCAL_CFLAGS += -DHUAWEI_BCM_WIFI
+endif
+
+LOCAL_SHARED_LIBRARIES += libnetutils libhwrpc
diff --git a/wifi/wifi.c b/wifi/wifi.c
index 90b7632..247ed45 100644
--- a/wifi/wifi.c
+++ b/wifi/wifi.c
@@ -147,12 +147,63 @@ static unsigned char dummy_key[21] = { 0x02, 0x11, 0xbe, 0x33, 0x43, 0x35,
                                        0x68, 0x47, 0x84, 0x99, 0xa9, 0x2b,
                                        0x1c, 0xd3, 0xee, 0xff, 0xf1, 0xe2,
                                        0xf3, 0xf4, 0xf5 };
-
+#ifdef HUAWEI_BCM_WIFI
+extern void huawei_oem_rapi_streaming_function(int n, int p1, int p2, int p3, int *v1, int *v2, int *v3);
+void sertomac(char *sernum, char *mac_addr);
+#endif
 /* Is either SUPPLICANT_NAME or P2P_SUPPLICANT_NAME */
 static char supplicant_name[PROPERTY_VALUE_MAX];
 /* Is either SUPP_PROP_NAME or P2P_PROP_NAME */
 static char supplicant_prop_name[PROPERTY_KEY_MAX];
 
+#ifdef HUAWEI_BCM_WIFI
+void getmac(char *mac_param)
+{
+    char x[8];
+    int  y;
+	char sernum[PROPERTY_VALUE_MAX];
+	char mac_addr[PROPERTY_VALUE_MAX];
+		property_get("ro.serialno", sernum, NULL);
+	if(sernum != NULL){
+		sertomac(sernum,mac_addr);
+		sprintf(mac_param,"mac_param=%s %s", mac_addr, DRIVER_MODULE_ARG);
+	}else{
+		memset(x,0,8);
+		y=0;
+		huawei_oem_rapi_streaming_function(3,0,0,0,0,&y,x);
+		ALOGV("huawei_oem_rapi_streaming_function %p %x %x",x,x[0],y);
+		sprintf(mac_param,"mac_param=%02X:%02X:%02X:%02X:%02X:%02X %s",x[5],x[4],x[3],x[2],x[1],x[0],DRIVER_MODULE_ARG);
+	}
+    ALOGI("Got MAC Address: %s ",mac_param);
+}
+
+void sertomac(char *sernum, char *mac_addr)
+{
+	int len,i;
+
+	len = strlen(sernum);
+
+	sernum[len-1]++;
+
+	for(i=1;i<len;i++){
+		if(sernum[len-i] > 'F'){
+			sernum[len-i] = '0';
+			sernum[len-i-1]++;
+		}
+	}	
+	ALOGV("result is %s", sernum);	
+    sprintf(mac_addr,"%c%c:%c%c:%c%c:%c%c:%c%c:%c%c", \
+	sernum[0], sernum[1], \
+	sernum[2], sernum[3], \
+	sernum[4], sernum[5], \
+	sernum[6], sernum[7], \
+	sernum[8], sernum[9], \
+	sernum[10], sernum[11]);	
+	ALOGV("MAC Address is %s", mac_addr);
+}
+#endif
+
+
 static int is_primary_interface(const char *ifname)
 {
     //Treat NULL as primary interface to allow control
@@ -308,9 +359,14 @@ int wifi_load_driver()
         return -1;
     usleep(200000);
 #endif
-
+#ifdef HUAWEI_BCM_WIFI
+    char mac_param[64];
+		getmac(mac_param);
+    if (insmod(DRIVER_MODULE_PATH, mac_param) < 0) {
+#else
     if (insmod(DRIVER_MODULE_PATH, DRIVER_MODULE_ARG) < 0) {
 #endif
+#endif
 
 #ifdef WIFI_EXT_MODULE_NAME
         rmmod(EXT_MODULE_NAME);
-- 
1.8.1.2

